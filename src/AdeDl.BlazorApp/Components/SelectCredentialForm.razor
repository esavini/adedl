@if (IsLoading)
{
    <Loading/>
    return;
}


<div class="row justify-content-around">
    @if (_credentials.Any())
    {
        <div class="col-4">

            <h3>Seleziona una credenziale</h3>

            <select class="form-select mt-3"
                    autocomplete="no"
                    @onchange="SelectCredential">

                @foreach (var credential in _credentials)
                {
                    <option value="@credential.Id">
                        @credential.Name
                    </option>
                }

            </select>


            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">

                <button class="btn btn-light me-2"
                        role="button"
                        @onclick="HandleNewCredentialAsync">
                    Aggiungi credenziale
                </button>

                @if (_selectedCredentialId is not null)
                {
                    <button class="btn btn-primary"
                            type="button"
                            @onclick="NextAsync">
                        Avanti
                    </button>
                }

            </div>

        </div>
    }

    @if (_currentEditingCredential is not null)
    {
        <div class="col-4">

            <h3>

                @if (_currentEditingCredential.Id is null)
                {
                    @("Nuova credenziale")
                }
                else
                {
                    @("Modifica credenziale")
                }

            </h3>

            <EditForm Model="_currentEditingCredential"
                      OnValidSubmit="HandleSubmitAsync">

                <DataAnnotationsValidator/>

                <div class="form-floating">
                    <InputText type="text"
                               class="form-control"
                               autocomplete="no"
                               id="nomeCredenziale"
                               @bind-Value="_currentEditingCredential.Name"
                               placeholder="Nome della credenziale"/>
                    <label for="nomeCredenziale">Nome della credenziale</label>
                </div>
                <div class="text-danger">
                    <ValidationMessage For="@(() => _currentEditingCredential.Name)"/>
                </div>

                <div class="form-floating mt-3">
                    <InputText type="text"
                               class="form-control"
                               autocomplete="no"
                               id="username"
                               @bind-Value="_currentEditingCredential.Username"
                               placeholder="Username Agenzia delle Entrate"/>
                    <label for="username">Username Agenzia delle Entrate</label>
                </div>
                <div class="text-danger">
                    <ValidationMessage For="@(() => _currentEditingCredential.Username)"/>
                </div>

                <div class="form-floating mt-3">
                    <InputText type="text"
                               class="form-control"
                               autocomplete="no"
                               id="password"
                               @bind-Value="_currentEditingCredential.Password"
                               placeholder="Password Agenzia delle Entrate"/>
                    <label for="password">Password Agenzia delle Entrate</label>
                </div>
                <div class="text-danger">
                    <ValidationMessage For="@(() => _currentEditingCredential.Password)"/>
                </div>

                <div class="form-floating mt-3">
                    <InputText type="text"
                               class="form-control"
                               autocomplete="no"
                               id="pin"
                               @bind-Value="_currentEditingCredential.Pin"
                               placeholder="PIN"/>
                    <label for="pin">PIN </label>
                </div>
                <div class="text-danger">
                    <ValidationMessage For="@(() => _currentEditingCredential.Pin)"/>
                </div>

                <div class="form-floating mt-3">
                    <InputText type="text"
                               class="form-control"
                               autocomplete="no"
                               id="pinDelega"
                               @bind-Value="_currentEditingCredential.DelegationPassword"
                               placeholder="PIN Delega"/>
                    <label for="pinDelega">PIN Delega</label>
                </div>
                <div class="text-danger">
                    <ValidationMessage For="@(() => _currentEditingCredential.DelegationPassword)"/>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">

                    @if (_currentEditingCredential.Id is not null)
                    {
                        <button class="btn btn-danger me-2"
                                role="button"
                                @onclick="HandleDeleteAsync">
                            Elimina
                        </button>
                    }

                    <button class="btn btn-primary"
                            type="submit">
                        Salva
                    </button>
                </div>

            </EditForm>

        </div>
    }

</div>